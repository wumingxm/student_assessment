<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.student_assessment.dao.StudentAssessTabDao">
	<!-- 查询所有启用的指标 -->
	<select id="selectAssessStandardEnabled"  resultType="AssessStandard">
		select assessItemName,assessItemId,weight  from assess_standard_tab  where standardState!=0 order by to_number(assessItemId)asc
	</select>
	<!-- 查询已经自我评价的学生 -->
	<select id="selectAssessedStudent"  resultType="Student">
		select stu.sno,stu.sname from stu 
		join stu_assess_tab sat on  sat.sno=stu.sno
		where sat.state=1
	</select>
	<!-- 查询教师评价 -->
	<select id="selectStudentAssessTab" parameterType="java.util.Map" resultType="AssessResultBean">
  	select distinct t2.*,stu.sName from
       (  select distinct  rownum rn, 
                sat.sno, 
                sat.academicYear, 
                sat.term, 
                sat.state, 
                sat.assessManId, 
                sat.assessDate, 
                assessScoreString 
                from ( 
                    select asct.assessTabId ,listagg(assessItemGrade,',') within 
                    group(order by to_number(asct.assessItemId) asc)as assessScoreString  from assess_score_tab asct
                    join assess_standard_tab ast on asct.assessItemId=ast.assessItemId
                    where ast.standardState!=0
                    group by ASSESSTABID
              )t1
              join stu_assess_tab sat on t1.assessTabId=sat.assessTabId
              where sat.sno<![CDATA[<>]]>sat.assessManId )t2
			join stu on t2.sno=stu.sno 
			where <![CDATA[rn>#{start} and rn<=#{end}]]>
		    and stu.classId=#{stu.classId}
	</select>
	<select id="selectTeacherAssessmentCount" resultType="long">
		select count(*) from(
		select distinct t2.*,stu.sName from
       		(select distinct  rownum rn, 
                sat.sno, 
                sat.academicYear, 
                sat.term, 
                sat.state, 
                sat.assessManId, 
                sat.assessDate, 
                assessScoreString 
                from ( 
                    select asct.assessTabId ,listagg(assessItemGrade,',') within 
                    group(order by to_number(asct.assessItemId) asc)as assessScoreString  from assess_score_tab asct
                    join assess_standard_tab ast on asct.assessItemId=ast.assessItemId
                    where ast.standardState=1
                    group by ASSESSTABID
              )t1
              join stu_assess_tab sat on t1.assessTabId=sat.assessTabId
              where sat.sno<![CDATA[<>]]>sat.assessManId )t2
			join stu on t2.sno=stu.sno 
			where  stu.classId=#{stu.classId}
		)
	</select>
	<select id="selectStudentFinalAssessment" resultType="AssessResultBean" parameterType="java.util.Map">
		select distinct * from
     ( select distinct  
     	rownum rn,
     	t1.sno,stu.sname,
     	t1.academicYear,
     	t1.term,
        t1.assessScoreString from (
        	  select sno, 
          			 sum(assessItemGrade) as totalScore,
		  			 listagg(assessItemGrade,',') within group(
		  			 order by to_number(asct.assessItemId) asc)as assessScoreString,
          			 asct.academicYear,
          			 asct.term
       		   from(select sat.sno,
       		   			   ast.assessItemId,
          				   sum(assessItemGrade)as assessItemGrade,
          			       sat.academicYear,
          				   sat.term
     	 			from assess_score_tab ast
      				join stu_assess_tab sat on ast.assesstabid =sat.assesstabid
	  				join assess_standard_tab asdt on asdt.assessitemid=ast.assessitemid  
	  				where standardState=1
     		   group by ast.assessItemId,sat.sno,sat.academicYear,sat.term)asct
     group by asct.sno,asct.academicYear,asct.term)t1
     join stu on t1.sno=stu.sno
     where 1=1 
     	 <if test="student.sNo!=null and student.sNo!=''">
          and	stu.sno=#{student.sNo}
     	</if>
     	 <if test="student.sName!=null and student.sName!=''">
        	  and  stu.sname=#{student.sName}
     	</if>
    	 <if test="student.classId!=null and student.classId!=''">
     	  and  stu.CLASSID=#{student.classId}
     	</if>)
     	where 1=1
     <![CDATA[and rn>#{start}]]> and <![CDATA[rn<=#{end}]]>
	</select>
	<select id="selectStudentFinalAssessmentCount" resultType="long" parameterType="java.util.Map">
	select count(0)from(
		select distinct * from
       (  select distinct  rownum rn,
                t1.sno,
                stu.sname,
                t1.academicYear,
                t1.term,
                t1.assessScoreString
                from (
                select sno, 
                       listagg(assessItemGrade,',') within group(order by asct.assessItemId asc)as assessScoreString,
                       asct.academicYear,
                       asct.term
                from(select sat.sno,ast.assessItemId,
                        sum(assessItemGrade)as assessItemGrade,
                        sat.academicYear,
                        sat.term
                    from assess_score_tab ast
                    join stu_assess_tab sat on ast.assesstabid =sat.assesstabid
                    join assess_standard_tab asdt on asdt.assessitemid=ast.assessitemid  where standardState=1
                    group by ast.assessItemId,sat.sno,sat.academicYear,sat.term)asct
            group by asct.sno,asct.academicYear,asct.term)t1
      	join stu on t1.sno=stu.sno 
      	<if test="classId!=null and classId!=''">
  			   and stu.classId=#{classId}		    	
      	</if>
      	)
	)
	</select>
	
	<insert id="addStudentAssessTab" parameterType="StudentAssessTab">
		insert into stu_assess_tab(sNo,assessTabId,academicYear,term,assessDate,state,assessManId)                   
        values(#{sNo},#{assessTabId},#{academicYear},#{term},#{assessDate},#{state},#{assessManId})   
	</insert>
	<update id="updateStudentAssessTabState" parameterType="StudentAssessTab">
		update stu_assess_tab set state='2'
		where sno=#{sNo}	
	</update>
	<delete id="deleteTeacherAssessment" parameterType="java.util.Map">
		delete from stu_assess_tab where  assessManId=#{assessManId} and sNo=#{sNo}
	</delete>
</mapper>